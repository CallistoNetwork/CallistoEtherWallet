{"version":3,"sources":["webpack:///./src/layouts/InterfaceLayout/containers/ColdStakingContainer/ColdStakingContainer.vue?187b","webpack:///src/layouts/InterfaceLayout/containers/ColdStakingContainer/ColdStakingContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/ColdStakingContainer/ColdStakingContainer.vue?5d73","webpack:///./src/layouts/InterfaceLayout/containers/ColdStakingContainer/ColdStakingContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/ColdStakingContainer/index.js","webpack:///./src/layouts/InterfaceLayout/containers/ColdStakingContainer/ColdStakingContainer.vue?5598"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","$t","_v","_s","on","sendEntireBalance","directives","name","rawName","value","expression","domProps","$event","target","composing","class","isValidAmount","valid","errors","has","msg","_e","validInputs","submitTransaction","staticRenderFns","components","InterfaceContainerTitle","InterfaceBottomText","blockie","Blockie","CurrencyPicker","props","tokensWithBalance","type","Array","default","getBalance","Function","highestGas","String","data","advancedExpand","isValidAddress","hexAddress","address","gasLimit","selectedCurrency","ethPrice","computed","txFee","txFeeEth","invalidValueMsg","isToken","enoughBalance","enoughCurrency","validDecimal","isValidDecimals","decimals","length","isValidData","isValidGasLimit","balanceDefault","symbol","txData","getTokenTransferABI","txValue","txTo","multiWatch","convert","watch","estimateGas","Object","keys","linkQuery","to","gaslimit","foundToken","$store","dispatch","network","online","newVal","getEthPrice","mounted","methods","openSettings","$eventHub","$emit","balance","contract","copyToClipboard","$refs","ref","select","document","execCommand","component"],"mappings":"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","file":"js/chunk-3caaa30c.cd138022.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"send-currency-container\"},[_c('interface-container-title',{attrs:{\"title\":_vm.$t('common.coldStaking')}}),_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"form-block amount-to-address\"},[_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"single-input-block\"},[_c('div',{staticClass:\"title\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('interface.sendTxAmount')))]),_c('p',{staticClass:\"title-button prevent-user-select\",on:{\"click\":_vm.sendEntireBalance}},[_vm._v(\"\\n              Entire Balance\\n            \")])]),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"validate\",rawName:\"v-validate\",value:('min_value:0'),expression:\"'min_value:0'\"},{name:\"model\",rawName:\"v-model\",value:(_vm.value),expression:\"value\"}],attrs:{\"type\":\"number\",\"placeholder\":\"Amount\",\"min\":\"0\",\"name\":\"value\",\"step\":\"any\"},domProps:{\"value\":(_vm.value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.value=$event.target.value}}}),_c('i',{class:[\n                !_vm.isValidAmount.valid || _vm.errors.has('value') ? 'not-good' : '',\n                'fa fa-check-circle good-button'\n              ],attrs:{\"aria-hidden\":\"true\"}})]),(!_vm.isValidAmount.valid || _vm.errors.has('value'))?_c('div',{staticClass:\"error-message-container\"},[_c('p',[_vm._v(_vm._s(_vm.isValidAmount.msg))])]):_vm._e()])])])]),_c('div',{staticClass:\"submit-button-container\"},[_c('div',{class:[\n        _vm.validInputs ? '' : 'disabled',\n        'submit-button large-round-button-green-filled'\n      ],on:{\"click\":_vm.submitTransaction}},[_vm._v(\"\\n      \"+_vm._s(_vm.$t('interface.sendTx'))+\"\\n    \")]),_c('interface-bottom-text',{attrs:{\"link-text\":_vm.$t('interface.helpCenter'),\"question\":_vm.$t('interface.haveIssues'),\"link\":\"https://kb.myetherwallet.com\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"send-currency-container\">\n    <interface-container-title :title=\"$t('common.coldStaking')\" />\n    <div class=\"send-form\">\n      <div class=\"form-block amount-to-address\">\n        <div class=\"amount\">\n          <!-- <div class=\"single-input-block\">\n            <div class=\"title\">\n              <h4>{{ $t('interface.sendTxType') }}</h4>\n            </div>\n            <currency-picker\n              :currency=\"tokensWithBalance\"\n              :page=\"'sendEthAndTokens'\"\n              :token=\"true\"\n              :default=\"selectedCurrency !== '' ? selectedCurrency : {}\"\n              @selectedCurrency=\"selectedCurrency = $event\"\n            />\n          </div> -->\n          <div class=\"single-input-block\">\n            <div class=\"title\">\n              <h4>{{ $t('interface.sendTxAmount') }}</h4>\n              <p\n                class=\"title-button prevent-user-select\"\n                @click=\"sendEntireBalance\"\n              >\n                Entire Balance\n              </p>\n            </div>\n            <div class=\"the-form amount-number\">\n              <input\n                v-validate=\"'min_value:0'\"\n                v-model=\"value\"\n                type=\"number\"\n                placeholder=\"Amount\"\n                min=\"0\"\n                name=\"value\"\n                step=\"any\"\n              />\n              <i\n                :class=\"[\n                  !isValidAmount.valid || errors.has('value') ? 'not-good' : '',\n                  'fa fa-check-circle good-button'\n                ]\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div\n              v-if=\"!isValidAmount.valid || errors.has('value')\"\n              class=\"error-message-container\"\n            >\n              <p>{{ isValidAmount.msg }}</p>\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"to-address\">\n          <div class=\"title\">\n            <h4>\n              {{ $t('interface.sendTxToAddr') }}\n              <blockie\n                v-show=\"isValidAddress\"\n                :address=\"hexAddress\"\n                :size=\"8\"\n                :scale=\"16\"\n                width=\"32px\"\n                height=\"32px\"\n                class=\"blockie-image\"\n              />\n            </h4>\n\n            <p\n              class=\"copy-button prevent-user-select\"\n              @click=\"copyToClipboard('address')\"\n            >\n              {{ $t('common.copy') }}\n            </p>\n          </div>\n          <div class=\"the-form address-block\">\n            <input\n              v-ens-resolver=\"'address'\"\n              ref=\"address\"\n              v-model=\"address\"\n              type=\"text\"\n              name=\"name\"\n              autocomplete=\"off\"\n            />\n            <i\n              :class=\"[\n                isValidAddress && hexAddress.length !== 0 ? '' : 'not-good',\n                'fa fa-check-circle good-button'\n              ]\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        </div> -->\n        <!-- <div class=\"tx-fee\">\n          <div class=\"title\">\n            <h4>\n              {{ $t('common.txFee') }}\n            </h4>\n            <p class=\"copy-button prevent-user-select\" @click=\"openSettings\">\n              {{ $t('common.edit') }}\n            </p>\n          </div>\n          <div class=\"fee-value\">\n            <div class=\"gwei\">\n              {{ gasPrice }} Gwei\n            </div>\n            <div v-show=\"network.type.name === 'ETH'\" class=\"usd\">\n              Cost {{ txFeeEth }} ETH = ${{ convert }}\n            </div>\n          </div>\n        </div>  -->\n      </div>\n    </div>\n    <!-- \n    <div class=\"send-form advanced\">\n      <div class=\"advanced-content\">\n        <div class=\"toggle-button-container\">\n          <h4>{{ $t('common.advanced') }}</h4>\n          <div class=\"toggle-button\">\n            <span>{{ $t('interface.dataGas') }}</span>\n            <div class=\"sliding-switch-white\">\n              <label class=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  @click=\"advancedExpand = !advancedExpand\"\n                />\n                <span class=\"slider round\" />\n              </label>\n            </div>\n          </div>\n        </div>\n        <div\n          :class=\"advancedExpand && 'input-container-open'\"\n          class=\"input-container\"\n        >\n          <div class=\"margin-container\">\n            <div v-show=\"!isToken\" class=\"the-form user-input\">\n              <p>Add Data</p>\n              <input\n                v-model=\"data\"\n                type=\"text\"\n                placeholder=\"Add Data (e.g. 0x7834f874g298hf298h234f)\"\n                autocomplete=\"off\"\n              />\n              <i\n                :class=\"[\n                  isValidData ? '' : 'not-good',\n                  'fa fa-check-circle good-button'\n                ]\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div class=\"the-form user-input\">\n              <p>{{ $t('common.gasLimit') | capitalize }}</p>\n              <input\n                v-model=\"gasLimit\"\n                :placeholder=\"$t('common.gasLimit')\"\n                type=\"number\"\n                min=\"0\"\n                name\n              />\n              <i\n                :class=\"[\n                  isValidGasLimit ? '' : 'not-good',\n                  'fa fa-check-circle good-button'\n                ]\"\n                aria-hidden=\"true\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"submit-button-container\">\n      <div\n        :class=\"[\n          validInputs ? '' : 'disabled',\n          'submit-button large-round-button-green-filled'\n        ]\"\n        @click=\"submitTransaction\"\n      >\n        {{ $t('interface.sendTx') }}\n      </div>\n      <interface-bottom-text\n        :link-text=\"$t('interface.helpCenter')\"\n        :question=\"$t('interface.haveIssues')\"\n        link=\"https://kb.myetherwallet.com\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport CurrencyPicker from '../../components/CurrencyPicker';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport { Transaction } from 'ethereumjs-tx';\nimport { Misc, Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\nimport ethUnit from 'ethjs-unit';\nimport utils from 'web3-utils';\nimport fetch from 'node-fetch';\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie,\n    'currency-picker': CurrencyPicker\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    }\n  },\n  data() {\n    return {\n      advancedExpand: false,\n      isValidAddress: false,\n      hexAddress: '',\n      address: '',\n      value: '0',\n      gasLimit: '21000',\n      data: '',\n      selectedCurrency: '',\n      ethPrice: 0\n    };\n  },\n\n  computed: {\n    ...mapState([\n      'account',\n      'gasPrice',\n      'web3',\n      'network',\n      'linkQuery',\n      'online'\n    ]),\n    txFee() {\n      return new BigNumber(ethUnit.toWei(this.gasPrice, 'gwei')).times(\n        this.gasLimit || 0\n      );\n    },\n    txFeeEth() {\n      if (new BigNumber(this.txFee).gt(0)) {\n        return ethUnit.fromWei(this.txFee, 'ether');\n      }\n      return 0;\n    },\n    isValidAmount() {\n      const notEnoughGasMsg =\n        this.$t('errorsGlobal.notAValidAmountTotal') +\n        ' Gas ' +\n        this.$t('errorsGlobal.toSend');\n      const notEnoughTokenMsg =\n        this.$t('errorsGlobal.notAValidAmountTotal') +\n        ' ' +\n        this.selectedCurrency.symbol +\n        ' ' +\n        this.$t('errorsGlobal.toSend');\n      const notEnoughCurrencyMsg =\n        this.$t('errorsGlobal.notAValidAmountTotal') +\n        ' ' +\n        this.network.type.currencyName +\n        ' ' +\n        this.$t('errorsGlobal.toSend');\n      const invalidValueMsg = this.$t('errorsGlobal.invalidValue');\n      const enoughTokenBalance = new BigNumber(this.value).lte(\n        this.selectedCurrency.balance\n      );\n      const enoughCurrency = new BigNumber(this.value)\n        .plus(this.txFeeEth)\n        .lte(this.balanceDefault);\n      const enoughGas = new BigNumber(this.txFeeEth).lte(this.balanceDefault);\n      const validDecimal = this.isValidDecimals;\n      if (new BigNumber(this.value).lt(0)) {\n        return {\n          msg: invalidValueMsg,\n          valid: false\n        };\n      }\n      if (this.isToken) {\n        const enoughBalance = enoughTokenBalance && enoughGas && validDecimal;\n        return {\n          valid: enoughBalance,\n          msg: enoughBalance\n            ? ''\n            : !enoughTokenBalance\n            ? notEnoughTokenMsg\n            : !enoughGas\n            ? notEnoughGasMsg\n            : invalidValueMsg\n        };\n      }\n      return {\n        valid: enoughCurrency && validDecimal,\n        msg: enoughCurrency\n          ? ''\n          : !enoughCurrency\n          ? notEnoughCurrencyMsg\n          : invalidValueMsg\n      };\n    },\n    isValidDecimals() {\n      const decimals = (this.value + '').split('.')[1];\n      if (!decimals) return true;\n      if (this.isToken) {\n        return decimals.length <= this.selectedCurrency.decimals;\n      }\n      return decimals.length <= 18;\n    },\n    isValidData() {\n      return Misc.validateHexString(this.data);\n    },\n    isValidGasLimit() {\n      return new BigNumber(this.gasLimit).gte(0);\n    },\n    balanceDefault() {\n      return new BigNumber(ethUnit.fromWei(this.account.balance, 'ether'));\n    },\n    validInputs() {\n      return (\n        this.isValidAmount.valid &&\n        this.isValidAddress &&\n        new BigNumber(this.gasLimit).gte(0) &&\n        Misc.validateHexString(this.data)\n      );\n    },\n    isToken() {\n      const symbol = this.network.type.currencyName;\n      return this.selectedCurrency.symbol !== symbol;\n    },\n    txData() {\n      if (this.isToken) {\n        return this.getTokenTransferABI(\n          this.value,\n          this.selectedCurrency.decimals\n        );\n      }\n      return Misc.sanitizeHex(this.data);\n    },\n    txValue() {\n      if (this.isToken) {\n        return '0x00';\n      }\n      return Misc.sanitizeHex(ethUnit.toWei(this.value, 'ether').toString(16));\n    },\n    txTo() {\n      return this.isToken\n        ? this.selectedCurrency.address.toLowerCase()\n        : this.hexAddress.toLowerCase().trim();\n    },\n    multiWatch() {\n      return (\n        this.value,\n        this.isValidAddress,\n        this.data,\n        this.selectedCurrency,\n        new Date().getTime() / 1000\n      );\n    },\n    convert() {\n      if (this.ethPrice) {\n        return new BigNumber(\n          new BigNumber(this.txFeeEth).times(new BigNumber(this.ethPrice))\n        )\n          .toFixed(2)\n          .toString();\n      }\n      return '--';\n    }\n  },\n  watch: {\n    multiWatch: utils._.debounce(function() {\n      if (this.validInputs) this.estimateGas();\n    }, 500),\n    tokensWithBalance() {\n      if (Object.keys(this.linkQuery).length > 0) {\n        const { data, to, value, gaslimit, tokensymbol } = this.linkQuery;\n        const foundToken = tokensymbol\n          ? this.tokensWithBalance.find(item => {\n              return item.symbol.toLowerCase() === tokensymbol.toLowerCase();\n            })\n          : undefined;\n\n        if (data && Misc.validateHexString(data)) {\n          this.data = data;\n          if (this.data.length > 0) {\n            this.advancedExpand = true;\n          }\n        } else {\n          this.data = '';\n        }\n\n        this.value = value ? new BigNumber(value).toFixed() : 0;\n        this.hexAddress = to ? to : '';\n        this.address = to ? to : '';\n\n        if (gaslimit) {\n          this.gasLimit = new BigNumber(gaslimit).toString();\n          this.advancedExpand = true;\n        } else {\n          this.gasLimit = '21000';\n        }\n\n        this.selectedCurrency = foundToken ? foundToken : this.selectedCurrency;\n\n        Toast.responseHandler(\n          'Form has been prefilled. Please proceed with caution!',\n          Toast.WARN\n        );\n        this.$store.dispatch('saveQueryVal', {});\n      }\n    },\n    network(newVal) {\n      if (this.online && newVal.type.name === 'ETH') this.getEthPrice();\n    }\n  },\n  mounted() {\n    if (this.online && this.network.type.name === 'ETH') this.getEthPrice();\n  },\n  methods: {\n    openSettings() {\n      this.$eventHub.$emit('open-settings');\n    },\n    sendEntireBalance() {\n      if (this.isToken) this.value = this.selectedCurrency.balance;\n      else\n        this.value =\n          this.balanceDefault > 0\n            ? this.balanceDefault.minus(\n                ethUnit.fromWei(\n                  new BigNumber(ethUnit.toWei(this.gasPrice, 'gwei'))\n                    .times(this.gasLimit)\n                    .toString(),\n                  'ether'\n                )\n              )\n            : 0;\n    },\n    getTokenTransferABI(amount, decimals) {\n      const jsonInterface = [\n        {\n          constant: false,\n          inputs: [\n            { name: '_to', type: 'address' },\n            { name: '_amount', type: 'uint256' }\n          ],\n          name: 'transfer',\n          outputs: [{ name: '', type: 'bool' }],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function'\n        }\n      ];\n      const contract = new this.web3.eth.Contract(jsonInterface);\n      return contract.methods\n        .transfer(\n          this.hexAddress.toLowerCase(),\n          new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toFixed()\n        )\n        .encodeABI();\n    },\n    async estimateGas() {\n      const coinbase = await this.web3.eth.getCoinbase();\n      const params = {\n        from: coinbase,\n        value: this.txValue,\n        to: this.txTo,\n        gasPrice: Misc.sanitizeHex(\n          ethUnit.toWei(this.gasPrice, 'gwei').toString(16)\n        ),\n        data: this.txData\n      };\n      this.web3.eth\n        .estimateGas(params)\n        .then(gasLimit => {\n          this.gasLimit = gasLimit;\n        })\n        .catch(err => {\n          this.gasLimit = -1;\n          Toast.responseHandler(err, Toast.ERROR);\n        });\n    },\n    async submitTransaction() {\n      window.scrollTo(0, 0);\n      try {\n        const coinbase = await this.web3.eth.getCoinbase();\n        const nonce = await this.web3.eth.getTransactionCount(coinbase);\n        const raw = {\n          nonce: Misc.sanitizeHex(new BigNumber(nonce).toString(16)),\n          gasPrice: Misc.sanitizeHex(\n            ethUnit.toWei(this.gasPrice, 'gwei').toString(16)\n          ),\n          gasLimit: Misc.sanitizeHex(new BigNumber(this.gasLimit).toString(16)),\n          to: this.txTo,\n          value: this.txValue,\n          data: this.txData\n        };\n        const _tx = new Transaction(raw);\n        const json = _tx.toJSON(true);\n        json.from = coinbase;\n        this.web3.eth.sendTransaction(json).catch(err => {\n          Toast.responseHandler(err, Toast.ERROR);\n        });\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    },\n    async getEthPrice() {\n      const price = await fetch(\n        'https://cryptorates.mewapi.io/ticker?filter=ETH'\n      )\n        .then(res => {\n          return res.json();\n        })\n        .catch(e => {\n          Toast.responseHandler(e, Toast.ERROR);\n        });\n      this.ethPrice =\n        typeof price === 'object' ? price.data.ETH.quotes.USD.price : 0;\n    },\n    copyToClipboard(ref) {\n      this.$refs[ref].select();\n      document.execCommand('copy');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ColdStakingContainer.scss';\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColdStakingContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColdStakingContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ColdStakingContainer.vue?vue&type=template&id=4d0ff3e3&scoped=true&\"\nimport script from \"./ColdStakingContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./ColdStakingContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ColdStakingContainer.vue?vue&type=style&index=0&id=4d0ff3e3&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4d0ff3e3\",\n  null\n  \n)\n\nexport default component.exports","export { default } from './ColdStakingContainer';\n","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColdStakingContainer.vue?vue&type=style&index=0&id=4d0ff3e3&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColdStakingContainer.vue?vue&type=style&index=0&id=4d0ff3e3&lang=scss&scoped=true&\""],"sourceRoot":""}